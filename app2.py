import streamlit as st
import numpy as np
import pickle
from PIL import Image
import os

# Load the trained model
with open('rf_model.pkl', 'rb') as f:
    model = pickle.load(f)

#  Full bilingual crop information (22 crops)
crop_info = {
    "Rice": {
        "en": "Grows well in clayey soil and needs a lot of water.",
        "ta": "роХро│ро┐роорогрпН роорогрпНрогро┐ро▓рпН роиройрпНро▒ро╛роХ ро╡ро│ро░рпНроирпНродрпБ, роЕродро┐роХрооро╛рой роирпАро░рпН родрпЗро╡рпИ."
    },
    "Maize": {
        "en": "Prefers well-drained fertile soil with moderate rainfall.",
        "ta": "роЪро░ро╛роЪро░ро┐ рооро┤рпИ роХрпКрогрпНроЯ, роиро▓рпНро▓ роирпАро░рпН ро╡роЯро┐роХро╛ро▓рпН роорогрпН ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒родрпБ."
    },
    "Chickpea": {
        "en": "Thrives in loamy soil with low humidity.",
        "ta": "роЪро┐ро▒ро┐роп роИро░рокрпНрокродроорпН роХрпКрогрпНроЯ ро▓рпЛрооро┐ роорогрпНрогро┐ро▓рпН роиройрпНро▒ро╛роХ ро╡ро│ро░рпБроорпН."
    },
    "Kidneybeans": {
        "en": "Requires warm climates and well-drained soil.",
        "ta": "ро╡рпЖрокрпНрокрооро╛рой роХро╛ро▓роиро┐ро▓рпИропрпБроорпН, роиройрпНроХрпБ ро╡роЯро┐роХро╛ро▓ро╛рой роорогрпНрогрпБроорпН родрпЗро╡рпИ."
    },
    "Pigeonpeas": {
        "en": "Grows in semi-arid conditions with light soil.",
        "ta": "роЕро░ро┐родро╛рой рооро┤рпИ ро╡ро╛ройро┐ро▓рпИропро┐ро▓рпБроорпН, роЗро▓роХрпБро╡ро╛рой роорогрпНрогро┐ро▓рпБроорпН ро╡ро│ро░рпБроорпН."
    },
    "Mothbeans": {
        "en": "Tolerates drought, grows in sandy soil.",
        "ta": "ро╡ро▒роЯрпНроЪро┐ропрпИ родро╛роЩрпНроХрпБроорпН родройрпНроорпИ роХрпКрогрпНроЯродрпБ, роорогро▓рпН роорогрпНрогро┐ро▓рпН ро╡ро│ро░рпБроорпН."
    },
    "Mungbean": {
        "en": "Requires hot, dry weather with moderate water.",
        "ta": "ро╡рпЖрокрпНрокрооро╛рой рооро▒рпНро▒рпБроорпН роЙро▓ро░рпНроирпНрод ро╡ро╛ройро┐ро▓рпИ родрпЗро╡рпИ, роЪро┐ро▒ро┐роп роирпАро░рпНродрпН родрпЗро╡рпИропрпБроЯройрпН."
    },
    "Blackgram": {
        "en": "Grows in warm and humid conditions.",
        "ta": "ро╡рпЖрокрпНрокрооро╛рой рооро▒рпНро▒рпБроорпН роИро░рокрпНрокродроорпН роиро┐ро▒рпИроирпНрод роЪрпВро┤ро▓ро┐ро▓рпН ро╡ро│ро░рпБроорпН."
    },
    "Lentil": {
        "en": "Needs cool weather and fertile loamy soil.",
        "ta": "роХрпБро│ро┐ро░ро╛рой ро╡ро╛ройро┐ро▓рпИ рооро▒рпНро▒рпБроорпН ро╡ро│рооро╛рой ро▓рпЛрооро┐ роорогрпН родрпЗро╡рпИ."
    },
    "Pomegranate": {
        "en": "Prefers well-drained sandy loam soil in dry climate.",
        "ta": "роЙро▓ро░рпНроирпНрод роХро╛ро▓роиро┐ро▓рпИроХрпНроХрпБ роПро▒рпНрок, роорогро▓рпНро╡рпЖроЯрпНроЯро┐ роорогрпНрогрпИ ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒родрпБ."
    },
    "Banana": {
        "en": "Requires rich loamy soil and high temperature.",
        "ta": "роЪро░ро┐ро╡ро╛рой ро▓рпЛрооро┐ роорогрпН рооро▒рпНро▒рпБроорпН роЙропро░рпН ро╡рпЖрокрпНрокроиро┐ро▓рпИ родрпЗро╡рпИ."
    },
    "Mango": {
        "en": "Requires warm and dry climate with sandy loam soil.",
        "ta": "ро╡рпЖрокрпНрокрооро╛рой рооро▒рпНро▒рпБроорпН роЙро▓ро░рпНроирпНрод роХро╛ро▓роиро┐ро▓рпИ рооро▒рпНро▒рпБроорпН роорогро▓рпНро╡рпЖроЯрпНроЯро┐ роорогрпН ро╡рпЗрогрпНроЯрпБроорпН."
    },
    "Grapes": {
        "en": "Needs hot and dry climate, well-drained soil.",
        "ta": "роХроЯрпБроорпИропро╛рой ро╡рпЖрокрпНрокроорпБроорпН роЙро▓ро░рпНроирпНрод роХро╛ро▓роиро┐ро▓рпИропрпБроорпН, роиройрпНроХрпБ ро╡роЯро┐роХро╛ро▓ро╛рой роорогрпН родрпЗро╡рпИ."
    },
    "Watermelon": {
        "en": "Needs sandy soil and hot climate with good irrigation.",
        "ta": "роорогро▓рпН роорогрпН рооро▒рпНро▒рпБроорпН роиройрпНроХрпБ рокро╛роЪрой ро╡роЪродро┐ роХрпКрогрпНроЯ ро╡рпЖрокрпНрокрооро╛рой ро╡ро╛ройро┐ро▓рпИ родрпЗро╡рпИ."
    },
    "Muskmelon": {
        "en": "Prefers dry and warm climate, well-drained sandy soil.",
        "ta": "роЙро▓ро░рпНроирпНрод рооро▒рпНро▒рпБроорпН ро╡рпЖрокрпНрокрооро╛рой роХро╛ро▓роиро┐ро▓рпИ рооро▒рпНро▒рпБроорпН роиройрпНроХрпБ ро╡роЯро┐роХро╛ро▓ро╛рой роорогро▓рпН роорогрпН."
    },
    "Apple": {
        "en": "Requires cold climate and fertile soil.",
        "ta": "роХрпБро│ро┐ро░рпНроирпНрод ро╡ро╛ройро┐ро▓рпИ рооро▒рпНро▒рпБроорпН ро╡ро│рооро╛рой роорогрпН родрпЗро╡рпИ."
    },
    "Orange": {
        "en": "Grows in subtropical climate and well-drained soil.",
        "ta": "роЕро░рпИрокрпН рокро░рпБро╡ро╡ро╛ройро┐ро▓рпИ рооро▒рпНро▒рпБроорпН роиройрпНроХрпБ ро╡роЯро┐роХро╛ро▓ро╛рой роорогрпНрогро┐ро▓рпН ро╡ро│ро░рпБроорпН."
    },
    "Papaya": {
        "en": "Thrives in warm climate with rich soil and irrigation.",
        "ta": "ро╡рпЖрокрпНрокрооро╛рой роХро╛ро▓роиро┐ро▓рпИ рооро▒рпНро▒рпБроорпН рокро╛роЪрой ро╡роЪродро┐ роЙро│рпНро│ ро╡ро│рооро╛рой роорогрпНрогро┐ро▓рпН ро╡ро│ро░рпБроорпН."
    },
    "Coconut": {
        "en": "Needs sandy loam soil and coastal humid climate.",
        "ta": "роорогро▓рпНро╡рпЖроЯрпНроЯро┐ роорогрпН рооро▒рпНро▒рпБроорпН роХроЯро▒рпНроХро░рпИ роИро░рооро╛рой роХро╛ро▓роиро┐ро▓рпИ родрпЗро╡рпИ."
    },
    "Cotton": {
        "en": "Prefers black soil and warm climate.",
        "ta": "роХро░ро┐роорогрпН рооро▒рпНро▒рпБроорпН ро╡рпЖрокрпНрокрооро╛рой роХро╛ро▓роиро┐ро▓рпИ ро╡ро┐ро░рпБрокрпНрокроорпН."
    },
    "Jute": {
        "en": "Grows in warm, humid areas with loamy soil.",
        "ta": "ро╡рпЖрокрпНрокрооро╛рой рооро▒рпНро▒рпБроорпН роИро░рооро╛рой ро╡ро╛ройро┐ро▓рпИ роХрпКрогрпНроЯ ро▓рпЛрооро┐ роорогрпНрогро┐ро▓рпН ро╡ро│ро░рпБроорпН."
    },
    "Coffee": {
        "en": "Requires shaded, humid conditions with rich soil.",
        "ta": "роиро┐ро┤ро▓рпБроЯройрпН роИро░рокрпНрокродрооро╛рой роЪрпВро┤рпНроиро┐ро▓рпИ рооро▒рпНро▒рпБроорпН ро╡ро│рооро╛рой роорогрпН родрпЗро╡рпИ."
    }
}

# App Layout
st.set_page_config(page_title="Smart Crop Recommender ЁЯМ▒", layout="wide")
st.title("ЁЯМ╛ Smart Crop Recommendation System")

# Sidebar Inputs
st.sidebar.header("ЁЯУЛ Enter Soil & Weather Details")

N = st.sidebar.number_input(" Nitrogen (N)", min_value=0, max_value=140, value=90)
P = st.sidebar.number_input(" Phosphorus (P)", min_value=5, max_value=145, value=42)
K = st.sidebar.number_input(" Potassium (K)", min_value=5, max_value=205, value=43)
temperature = st.sidebar.number_input(" Temperature (┬░C)", min_value=8.0, max_value=45.0, value=20.5)
humidity = st.sidebar.number_input(" Humidity (%)", min_value=10.0, max_value=100.0, value=80.0)
ph = st.sidebar.number_input(" Soil pH", min_value=3.5, max_value=9.0, value=6.5)
rainfall = st.sidebar.number_input("Rainfall (mm)", min_value=20.0, max_value=300.0, value=200.0)

# Feature Engineering
K_log = np.log1p(K)
humidity_sq = humidity ** 2
input_data = np.array([[N, P, K, temperature, humidity, ph, rainfall, K_log, humidity_sq]])

# Prediction Logic
if st.sidebar.button("Recommend Crop"):
    prediction = model.predict(input_data)
    crop = prediction[0].title()

    st.markdown(f"Recommended Crop: **{crop}**")

    with st.expander("Crop Details"):
        st.write("**English:**", crop_info.get(crop, {}).get("en", "No info available."))
        st.write("**родрооро┐ро┤рпН:**", crop_info.get(crop, {}).get("ta", "родроХро╡ро▓рпН роЗро▓рпНро▓рпИ."))

        # Show Crop Image if available
        image_path = os.path.join("crop_images", f"{crop.lower()}.jpg")
        if os.path.exists(image_path):
            img = Image.open(image_path)
            st.image(img, caption=f"{crop} Photo", use_container_width=True)
        else:
            st.warning(" Crop photo not available.")
else:
    st.info("Please enter the soil & weather details and click **Recommend Crop**.")
